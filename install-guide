Local Install Guide

1 Environment Setup:

sudo apt update
sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl


2 Create the PostgreSQL Database and User:

sudo -u postgres psql

CREATE DATABASE myproject;
CREATE USER myprojectuser WITH PASSWORD 'password';
ALTER ROLE myprojectuser SET client_encoding TO 'utf8';
ALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed';
ALTER ROLE myprojectuser SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser;

to exit type: \q


3 Create Virtual Environment and install frameworks:

sudo apt install python3-venv
mkdir pyapps    (in home folder)
cd pyapps
python3 -m venv .venv
source venv/bin/activate  

python -m pip install --upgrade pip
pip install django gunicorn psycopg2 requests
pip install psycopg2-binary

--to check install--

pip freeze


4 Clone or Download & Unzip repository files in project directory (in pyapps)

mkdir chetflix
git clone https://github.com/CousinChet/chetflix.git

5 Change chetflix/settings.py:

SECRET_KEY
ALLOWED_HOSTS
DATABASES
DEBUG

NOTE: You can create a local_settings.py mentioned at bottom of settings.py and Local Install Guide for security

6 Create Super User, collect static files, and migrations:

python manage.py createsuperuser
python manage.py collectstatic
python manage.py makemigrations
python manage.py migrate


7* (optional) You can test or demo with limited functionality:

python manage.py runserver
Browser: 127.0.0.1:8000
Browser: 127.0.0.1:8000/admin

8 Open gunicorn.socket file:

sudo nano /etc/systemd/system/gunicorn.socket

--Copy this code, paste it in and save--


[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target


9 Open gunicorn.service file:

# sudo nano /etc/systemd/system/gunicorn.service

--Change *USER* to your superuser, WorkingDirectory Path, and ExecStart Path if needed: /home/(ubuntu-user)/pyapps --
--Copy this code after editing paths and paste into the file--

[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User=superuser
Group=www-data
WorkingDirectory=/home/pyapps/chetflix
ExecStart=/home/pyapps/venv/bin/gunicorn \
          --access-logfile - \
          --workers 3 \
          --bind unix:/run/gunicorn.sock \
          chetflix.wsgi:application

[Install]
WantedBy=multi-user.target


10 Start and enable Gunicorn socket

sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

--Check status of guinicorn--

sudo systemctl status gunicorn.socket

--Check the existence of gunicorn.sock--

file /run/gunicorn.sock


11 NGINX Setup & Create project folder

sudo nano /etc/nginx/sites-available/chetflix

--Change root to correct path: /home/(ubuntu-user)/pyapps --
--Copy this code after editing paths and paste into the file--

server {
    listen 80;
    server_name YOUR_IP_ADDRESS;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/pyapps/chetflix;
    }
    
    location /media/ {
        root /home/pyapps/chetflix;    
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }
}


12 Enable the file by linking to the sites-enabled directory:

sudo ln -s /etc/nginx/sites-available/chetflix /etc/nginx/sites-enabled

--Test NGINX config--

sudo nginx -t

--Restart NGINX--

sudo systemctl restart nginx


Add File Upload Settings in nginx.conf to the http{} area 

client_max_body_size 2100M;

--Reload NGINX--

sudo systemctl restart nginx



13 OPTIONAL local_settings.py in with chetflix settings.py:


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'add secret key'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'myproject',
        'USER': 'myprojectuser',
        'PASSWORD': 'pass',
        'HOST': 'localhost',
    }
}
